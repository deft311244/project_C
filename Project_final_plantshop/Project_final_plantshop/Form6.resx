<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Kor+D4VUGj0J1ou7AAAAAElFTkSuQmCC
</value>
  </data>
</root>